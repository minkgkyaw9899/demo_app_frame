import he from"http";import B from"express";import de from"dotenv";de.config();var C=process.env.PORT||3e3,j=process.env.ROUNDS?+process.env.ROUNDS:10,be=process.env.ENCRYPT_PASSWORD??"ace_encrypt_password",Se=process.env.ENCRYPT_SALT??"salt",Ue=process.env.ENCRYPT_COST?+process.env.ENCRYPT_COST:5,qe=process.env.ENCRYPT_LEGNTH?+process.env.ENCRYPT_LEGNTH:256,T=process.env.JWT_SECRET??"jwt secure secret 123";import x from"consola";import{Chalk as me}from"chalk";var p=new me({level:3}),c=(r,e,o)=>{switch(r){case"success":return x.success(` ${p.bgGreen.black.bold(e)} ${p.green(o)}`);case"error":return x.error(` ${p.bgRed.whiteBright.bold(e)} ${p.redBright(o)}`);case"warn":return x.warn(` ${p.bgYellow.whiteBright.bold(e)} ${p.yellowBright(o)}`);case"info":return x.info(` ${p.bgBlue.whiteBright.bold(e)} ${p.blueBright(o)}`)}};import we from"http-errors";import{Router as ge}from"express";import Y from"http-errors";import E from"bcrypt";var F=async r=>{let e=await E.genSalt(j);return await E.hash(r,e)},H=async(r,e)=>await E.compare(r,e);import{PrismaClient as le,Prisma as ye}from"@prisma/client";var R=new le,b=R.user,u=R.post,Be=R.$connect(),je=R.$disconnect(),S=ye.PrismaClientKnownRequestError,k=(r,e)=>{for(let o of e)delete r[o];return r};var a=(r,e)=>Promise.reject({status:r,message:e||"Internal Server Error"});var O=async r=>{try{return await b.findUnique({where:{id:r}})}catch(e){return a(500,e?.message)}},A=async r=>{try{let{password:e,name:o,email:t}=r,s=await F(e),n={name:o,email:t,password:s};return await b.create({data:n})}catch(e){return e instanceof S&&e.code==="P2002"?a(409,"User already existed with that email"):a(500)}},$=async r=>{try{return await b.findUnique({where:{email:r}})}catch(e){if(c("error","findUserByEmail",e?.message),e)return a(500,"Db error")}};import D from"jsonwebtoken";var N=r=>D.sign(r,T),M=r=>{try{return{decoded:D.verify(r,T),expired:!1,valid:!0}}catch(e){return c("error","verify token",e?.message),{valid:!1,decoded:null,expired:e.message==="jwt expired"}}};var L=async(r,e,o)=>{let t=r.body;try{let s=k(await A(t),["password"]),n=N({id:s.id,email:s.email});return e.status(201).json({meta:{status:201,message:"Successfully register user"},data:{user:s,token:n}})}catch(s){return o(s)}},Z=async(r,e,o)=>{try{let{email:t,password:s}=r.body,n=await $(t);if(!n)return o(Y(404,"User not found"));if(!await H(s,n.password))return o(Y(401,"Invalid email or password"));let m=N({id:n.id,email:n.email});return e.status(200).json({meta:{status:200,message:"Successfully login"},data:{user:k(n,["password"]),token:m}})}catch(t){return o(t)}};import{ZodError as fe}from"zod";import K from"http-errors";var l=r=>async(e,o,t)=>{try{return await r.parseAsync({body:e.body,query:e.query,params:e.params}),t()}catch(s){if(s instanceof fe){let n=s.issues.map(i=>i.message)[0];return t(K(422,n))}return c("error","validator middleware",s?.message),t(K(422))}};import{string as f,object as U}from"zod";var z=U({body:U({name:f({required_error:"Name is required"}),email:f({required_error:"Email is required"}).email("Invalid email format"),password:f({required_error:"Password is required"})})}),G=U({body:U({email:f({required_error:"Email is required"}).email("Invalid email format"),password:f({required_error:"Password is required"})})});var I=ge();I.post("/register",l(z),L);I.post("/login",l(G),Z);var Q=I;import g from"http-errors";var W=async(r,e,o)=>{try{let t=r.headers.authorization;if(!t)return o(g(401));let[s,n]=t.split(" ");if(s!=="Bearer")return o(g(401,"Invalid token type"));let{decoded:i,valid:m,expired:P}=M(n);if(P)return o(g(401,"Token expired"));if(!m)return o(g(401,"Invalid token"));let{id:h}=i,w=await O(h);return w?(e.locals.user={id:w.id},o()):o(g(401,"User not found"))}catch(t){return o(t)}};import{Router as Pe}from"express";var J=async()=>{try{return await u.count()}catch(r){return a(500,r?.message)}},V=async({skip:r,take:e})=>{try{return await u.findMany({skip:r,take:e,include:{postBy:{select:{id:!0,name:!0}}}})}catch(o){return a(500,o?.message)}},X=async r=>{try{return await u.findUnique({where:{id:r},include:{postBy:{select:{id:!0,name:!0}}}})}catch(e){return a(500,e?.message)}},ee=async r=>{try{return await u.create({data:r})}catch(e){return c("error","createPost",e.message),a(500,e.message)}},re=async r=>{let{postId:e,title:o,body:t}=r;try{return await u.update({where:{id:e},data:{title:o,body:t}})}catch(s){return a(500,s?.message)}},te=async r=>{try{return await u.delete({where:{id:r}})}catch(e){return e instanceof S&&e.code==="P2025"?a(404,"Post not found"):a(500,"Db error")}};import _ from"http-errors";var oe=async(r,e,o)=>{try{let t=r.body,s=e.locals.user?.id,n={...t,userId:s},i=await ee(n);return e.status(200).json({meta:{status:200,message:"Successfully create new post"},data:{post:i}})}catch(t){return o(t)}},se=async(r,e,o)=>{try{let t=r.query.pages?parseInt(r.query.pages):1;if(isNaN(t))return o(_(422,"Pages should be number type"));let s,n=20;t<=1?s=0:s=(t-1)*n,console.log(s);let i=await V({skip:s,take:n});t=t++;let m=await J(),P=Math.ceil(m/n),h=t<P,w=h?t+1:null;return e.status(200).json({meta:{status:200,message:"Successfully create new post",total:m,totalPages:P,currentPages:t,hasNextPage:h,nextPage:w},data:{posts:i}})}catch(t){return o(t)}},ne=async(r,e,o)=>{try{let t=r.params.id;if(!t)return o(_(422,"Post id not found"));let s=await X(t);return s?e.status(200).json({meta:{status:200,message:"Successfully get post"},data:{post:s}}):o(_(404,"Post not found"))}catch(t){return o(t)}},ae=async(r,e,o)=>{try{let t=r.params.id,s=e.locals.user?.id,n={postId:t,userId:s,...r.body},i=await re(n);return e.status(202).json({meta:{status:202,message:"Successfully create new post"},data:{post:i}})}catch(t){return o(t)}},ie=async(r,e,o)=>{try{let t=r.params.id,s=await te(t);return e.status(200).json({meta:{status:200,message:"Successfully deleted post"},data:{post:{id:t}}})}catch(t){return o(t)}};import{object as q,string as v}from"zod";var ce=q({body:q({title:v({required_error:"Title is required"}),body:v({required_error:"Body is required"})})}),pe=q({body:q({title:v({required_error:"Title is required"}).optional(),body:v({required_error:"Body is required"}).optional()})});var y=Pe();y.get("/",se);y.get("/:id",ne);y.post("/",l(ce),oe);y.patch("/:id",l(pe),ae);y.delete("/:id",ie);var ue=y;var d=B();d.use(B.json());d.use(B.urlencoded({extended:!0}));d.use("/api/v1/users",Q);d.use("/api/v1/posts",W,ue);d.use((r,e,o)=>o(we(404,"Your request was not found")));d.use((r,e,o,t)=>{let s=r.status??500,n=r.message??"Internal Server Error";return o.status(s).json({error:{status:s,message:n}})});var xe=he.createServer(d);xe.listen(C,()=>c("success","startup",`Server listening on ${C}`));
//# sourceMappingURL=app.mjs.map